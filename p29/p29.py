# how many distinct terms are in the sequence generated by a^b for 2 <= a <=
# 100 and 2 <= b <= 100?
# 
# Brute force: calculate all 100**2 values. make a set from them. That is fast
# to code and very easy.

# Better: store the prime factorization of each value
import math
from collections import Counter

def LowestPrimeFactor(num):
    for i in range(2, int(math.sqrt(num) + 1)):
        if num % i == 0:
            return i
    return num

def Factor(num):
    lowestPrimeFactor = LowestPrimeFactor(num)
    if lowestPrimeFactor == num:
        return [num]
    else:
        factors  = [lowestPrimeFactor]
        factors.extend(Factor(num / lowestPrimeFactor))
        return sorted(factors)



def Run():
    uniques = set([])
    for a in range(2, 101):
        pfac = Factor(a)
        print pfac
        for b in range(2, 101):
            c = Counter()
            for pf in pfac:
                c[pf] += 1
            for pf in c:
                c[pf] *= b
            uniquestr = ','.join([str(x) for x in sorted(c.elements())])
            uniques.update(set([uniquestr]))
    print len(uniques)
        
